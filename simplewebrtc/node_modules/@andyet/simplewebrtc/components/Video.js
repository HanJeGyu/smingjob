"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const React = tslib_1.__importStar(require("react"));
/**
 * @description
 * Local and remote video tracks can be played with the `<Video/>` component.
 *
 * The provided `media` property can include `remoteDisabled` and `localDisabled` fields. If either of those properties are `true`, video playback will be paused.
 *
 * @public
 *
 * @example
 * <Video media={getMediaTrack(store, 'some-media-id')} />
 */
class Video extends React.Component {
    componentDidMount() {
        this.setup();
    }
    componentDidUpdate(prev) {
        this.setup();
    }
    setup() {
        if (!this.props.media || !this.video) {
            return;
        }
        this.video.oncontextmenu = e => {
            e.preventDefault();
        };
        this.video.muted = true;
        this.video.autoplay = true;
        if (this.video.srcObject !== this.props.media.stream) {
            this.video.srcObject = this.props.media.stream;
        }
    }
    render() {
        if (!this.props.media || !this.props.media.loaded) {
            return null;
        }
        return (React.createElement("video", { ref: (el) => {
                this.video = el;
            }, style: this.props.media && this.props.media.renderMirrored
                ? {
                    transform: 'scaleX(-1)'
                }
                : {}, playsInline: true }));
    }
}
exports.default = Video;
